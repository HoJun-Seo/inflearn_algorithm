Counting Cells in a Blob

입력으로 binary 이미지가 주어진다.
각 픽셀은 background pixel 이거나 혹은 image pixel
서로 연결된 image pixel 들의 집합을 blob 이라고 부른다.
상하좌우 및 대각 방향으로도 연결된 것으로 간주한다.

입력 : 
N x N 크기의 2차원 그리드(grid)
하나의 좌표(x,y)

출력 :
픽셀(x,y) 가 포함된 blob의 크기
(x,y) 가 어떤 blob 에도 속하지 않는 경우에는 0

Recursive Thinking
현재 픽셀이 속한 blob 의 크기를 카운트하려면
- 현재 픽셀이 image color 가 아니라면 0 을 반환한다.(base case)
- 현재 픽셀이 image color 라면 먼저 현재 픽셀을 카운트 한다.(count = 1)
- 현재 픽셀이 중복 카운트 되는 것을 방지하기 위해 다른 색으로 칠한다.
- 현재 픽셀에 이웃한 모든 픽셀(북->북동->동->동남.....시계방향으로 읽어들인다.)들에 대해서 그 픽셀이 속한 blob 의 크기를 카운트하여 카운터에 더해준다.
- 카운터를 반환한다.

슈도코드
Algorithm for countCells(x,y) : // 입력으로 (x,y) 좌표 받음
if the pixel (x,y) is outstide the grid //(x,y) 좌표가 정상적인 범위가 아닐때
	the result is 0;
else if pixel (x,y) is not an image pixel or already counted //이미지 픽셀이 아니거나 이미 카운트 된 cell 인 경우
	the result is 0;
else
	set the colour of the pixel (x,y) to a red colour; //이미 카운트 되었음을 표시
	the result is 1 plus the number of cells in each piece of the blob that includes a nearest neighbour;
	//인접 픽셀 각각에 대해 recursion 을 호출해서 그 결과를 plus 하라.